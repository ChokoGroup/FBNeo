name: Compile crosstools-ng

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-release:
    runs-on: ubuntu-24.04
    container: node:current-slim
    permissions:
      contents: write
    steps:
      - name: Install needed tools
        run: |
          echo "NOW=$(date +%F)" >> "$GITHUB_ENV"
          dpkg --add-architecture armhf
          apt-get update; apt-get upgrade
          apt-get install --assume-yes curl ca-certificates build-essential autoconf flex texinfo help2man file gawk libtool-bin bison ncurses-dev binutils-multiarch zip git python3 libudev-dev:armhf libsdl2-dev:armhf libsdl2-image-dev:armhf
          apt-get autoremove; apt-get autoclean
      - name: Compile crosstools-ng
        run: |
          git config --global --add safe.directory "$PWD"
          git clone https://github.com/crosstool-ng/crosstool-ng .
          rm -rf .git .gitignore .github
          curl -o m4/host-cpu-c-abi.m4 'https://gitlab.com/openconnect/openconnect/-/raw/master/m4/host-cpu-c-abi.m4?ref_type=heads&inline=false'
          export CT_PREFIX="$PWD/.build/install"
          ./bootstrap
          ./configure --enable-local
          make -j $(nproc)
          ./ct-ng armv7-rpi2-linux-gnueabihf
          curl -o crosstools-ng.patch 'https://raw.githubusercontent.com/ChokoGroup/FBNeo/refs/heads/master/crosstools-ng.patch'
          patch < crosstools-ng.patch
          sed -i 's/^.*CT_EXPERIMENTAL.*$/CT_EXPERIMENTAL=y/' .config
          echo "CT_ALLOW_BUILD_AS_ROOT=y" >> .config
          echo "CT_ALLOW_BUILD_AS_ROOT_SURE=y" >> .config
          env -u LD_LIBRARY_PATH ./ct-ng build CT_JOBS=$(nproc)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crosstool-ng-repo
          path: ./.build/install/
          overwrite: true
          compression-level: 9
          include-hidden-files: true
